/*
 * Gradle build file.
 */
version = '0.0.1'
bundleVersion = version

projectName = 'MRG I/O'
projectDescription = projectName
projectURL = 'https://github.com/heuer/mrg-ext'

ext.sesameLib = 'lib/openrdf-sesame-2.6.8-onejar.jar'
ext.rdfaLib = 'lib/rdfa-0.1.1.jar'

configurations {
    tools
}

repositories {
    // jarjar
    maven { url 'http://repo.joist.ws/' }
}

metaInf = [file('NOTICE.TXT')]

ext.libs = [sesameLib, rdfaLib]

dependencies {
    tools 'com.tonicsystems:jarjar:1.0'

    compile files(libs),
            'org.slf4j:slf4j-api:(1.5.8,)'
    testRuntime 'org.slf4j:slf4j-jdk14:(1.5.8,)'
}

jar << {
    def tmp_jar = "$buildDir/libs/tmp.jar"
    def new_jar = jar.archivePath
    def extracted = "$buildDir/libs/extracted"
    def classesDir = sourceSets.main.classesDir

    ant {
        taskdef name: 'jarjar', 
            classname: 'com.tonicsystems.jarjar.JarJarTask', 
            classpath: configurations.tools.asPath

        jarjar(jarfile: tmp_jar) {
            zipfileset src: jar.archivePath
            zipfileset src: sesameLib, excludes: 'META-INF/**'
            zipfileset src: rdfaLib, excludes: 'META-INF/**'

            configurations.testRuntime.files.findAll { file -> ['slf4j'].any { file.name.startsWith(it) } }.each { jarjarFile ->
                zipfileset src: jarjarFile, excludes: 'META-INF/**'
            }

            rule pattern: "info.aduna.**", result: "org.mulgara.mrg.io.internal.aduna.@1"
            rule pattern: "org.openrdf.**", result: "org.mulgara.mrg.io.internal.openrdf.@1"
            rule pattern: "net.rootdev.**", result: "org.mulgara.mrg.io.internal.rdfa.@1"
            rule pattern: 'org.slf4j.**', result: 'org.mulgara.mrg.io.internal.logging.@1'

            keep pattern: 'org.openrdf.rio.**'
            keep pattern: 'net.rootdev.**'
            // The following line should be sufficient, but it does not work. JarJar, removes org.openrdf.rio classes.
            keep pattern: 'org.mulgara.**'
        }
    
        unjar src: tmp_jar, dest: extracted
        delete dir: "$extracted/org/mulgara/mrg/io/internal/openrdf/console"
        delete(includeemptydirs: 'true') {
            // Deletes all empty packages / directories
            fileset(dir: extracted, excludes: '**/*.*')
        }
        delete file: tmp_jar
        jar destfile: new_jar, basedir: extracted
        delete dir: extracted
    }
}
